From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: ishland <ishlandmc@yeah.net>
Date: Mon, 5 Oct 2020 18:01:52 +0800
Subject: [PATCH] Highly boost chunk lighting behavior

Do not run lighting task immediately to get better chunk
loading/generation performance especially for world pregen

diff --git a/src/main/java/net/minecraft/server/LightEngineGraph.java b/src/main/java/net/minecraft/server/LightEngineGraph.java
index fed00cc6a4f63170e1ea275d151e2a96356c44d5..9a13baeec5bb123be22cc4dcb3d6fc7e0891bce4 100644
--- a/src/main/java/net/minecraft/server/LightEngineGraph.java
+++ b/src/main/java/net/minecraft/server/LightEngineGraph.java
@@ -86,6 +86,8 @@ public abstract class LightEngineGraph {
     }
 
     public void a(LongPredicate longpredicate) {
+        // Yatopia start - don't create new list
+        /*
         LongArrayList longarraylist = new LongArrayList();
 
         this.c.keySet().forEach((i) -> {
@@ -95,6 +97,13 @@ public abstract class LightEngineGraph {
 
         });
         longarraylist.forEach(this::e);
+        */
+        this.c.keySet().forEach((java.util.function.LongConsumer) (i) -> {
+            if (longpredicate.test(i)) {
+                this.e(i);
+            }
+        });
+        // Yatopia end
     }
 
     private void a(long i, int j, int k, boolean flag) {
diff --git a/src/main/java/net/minecraft/server/LightEngineThreaded.java b/src/main/java/net/minecraft/server/LightEngineThreaded.java
index 4d024a4849b7566c0faba131caab57b4ddf35e29..86eacbc7ad26c1d2612db99efbe50fc25857258c 100644
--- a/src/main/java/net/minecraft/server/LightEngineThreaded.java
+++ b/src/main/java/net/minecraft/server/LightEngineThreaded.java
@@ -272,6 +272,10 @@ public class LightEngineThreaded extends LightEngine implements AutoCloseable {
         CompletableFuture<IChunkAccess> future = new CompletableFuture<>();
         IntSupplier prioritySupplier = playerChunkMap.getPrioritySupplier(pair);
         boolean[] skippedPre = {false};
+        // Yatopia start - unblock chunk loading
+        future.complete(ichunkaccess);
+        this.d.c(chunkcoordintpair);
+        // Yatopia end
         this.queue.addChunk(pair, prioritySupplier, SystemUtils.a(() -> {
             if (!isChunkLightStatus(pair)) {
                 future.complete(ichunkaccess);
@@ -301,12 +305,12 @@ public class LightEngineThreaded extends LightEngine implements AutoCloseable {
             return "lightChunk " + chunkcoordintpair + " " + flag;
             // Paper start  - merge the 2 together
         }), () -> {
-            this.d.c(chunkcoordintpair); // Paper - release light tickets as post task to ensure they stay loaded until fully done
+            // this.d.c(chunkcoordintpair); // Paper - release light tickets as post task to ensure they stay loaded until fully done // Yatopia - don't double release ticket
             if (skippedPre[0]) return; // Paper - future's already complete
             ichunkaccess.b(true);
             super.b(chunkcoordintpair, false);
             // Paper start
-            future.complete(ichunkaccess);
+            // future.complete(ichunkaccess); // Yatopia - don't double complete future
         });
         return future;
         // Paper end
