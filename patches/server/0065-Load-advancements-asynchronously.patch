From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ivan Pekov <ivan@mrivanplays.com>
Date: Mon, 5 Oct 2020 18:40:58 +0300
Subject: [PATCH] Load advancements asynchronously

Advancements are loaded the same way, but on a different thread.
Previously, an advancement load would take up to 300ms (more like in the 200s). Making the load asynchronous is
trivial.

diff --git a/src/main/java/net/minecraft/server/AdvancementDataPlayer.java b/src/main/java/net/minecraft/server/AdvancementDataPlayer.java
index 17789407b9e86896a963a305a13357286aa5f319..bffc3541e8446e5aaedb7e1d1c8e8ef3a4040368 100644
--- a/src/main/java/net/minecraft/server/AdvancementDataPlayer.java
+++ b/src/main/java/net/minecraft/server/AdvancementDataPlayer.java
@@ -139,6 +139,7 @@ public class AdvancementDataPlayer {
 
     private void d(AdvancementDataWorld advancementdataworld) {
         if (this.f.isFile()) {
+            PlayerList.ASYNC_ADVANCEMENTS.execute(() -> { // Yatopia
             try {
                 JsonReader jsonreader = new JsonReader(new StringReader(Files.toString(this.f, StandardCharsets.UTF_8)));
                 Throwable throwable = null;
@@ -159,8 +160,18 @@ public class AdvancementDataPlayer {
                         throw new JsonParseException("Found null for advancements");
                     }
 
+                    // Yatopia start - replace stream
+                    /*
                     Stream<Entry<MinecraftKey, AdvancementProgress>> stream = map.entrySet().stream().sorted(Comparator.comparing(Entry::getValue));
                     Iterator iterator = ((List) stream.collect(Collectors.toList())).iterator();
+                     */
+                    java.util.List<Entry<MinecraftKey, AdvancementProgress>> list = new net.yatopia.server.list.GlueList<>();
+                    for (MinecraftKey key : map.keySet()) {
+                        list.add(new java.util.AbstractMap.SimpleImmutableEntry<>(key, map.get(key)));
+                    }
+                    list.sort(Entry.comparingByValue());
+                    Iterator<Entry<MinecraftKey, AdvancementProgress>> iterator = list.iterator();
+                    // Yatopia end
 
                     while (iterator.hasNext()) {
                         Entry<MinecraftKey, AdvancementProgress> entry = (Entry) iterator.next();
@@ -173,7 +184,10 @@ public class AdvancementDataPlayer {
                             }
                             // CraftBukkit end
                         } else {
-                            this.a(advancement, (AdvancementProgress) entry.getValue());
+                            AdvancementProgress progress = entry.getValue();
+                            MCUtil.ensureMain(() -> { // Yatopia start - ensure main
+                            this.a(advancement, progress);
+                            }); // Yatopia end
                         }
                     }
                 } catch (Throwable throwable1) {
@@ -198,6 +212,7 @@ public class AdvancementDataPlayer {
             } catch (IOException ioexception) {
                 AdvancementDataPlayer.LOGGER.error("Couldn't access player advancements in {}", this.f, ioexception);
             }
+            }); // Yatopia
         }
 
         this.c(advancementdataworld);
diff --git a/src/main/java/net/minecraft/server/PlayerList.java b/src/main/java/net/minecraft/server/PlayerList.java
index c097804cc19e88b8425b28a53d1258c929cf52b9..feed8db363b649c258c60193e7dc3189c0cca079 100644
--- a/src/main/java/net/minecraft/server/PlayerList.java
+++ b/src/main/java/net/minecraft/server/PlayerList.java
@@ -46,6 +46,11 @@ import org.spigotmc.event.player.PlayerSpawnLocationEvent;
 
 public abstract class PlayerList {
 
+    // Yatopia start
+    public static final java.util.concurrent.ExecutorService ASYNC_ADVANCEMENTS = java.util.concurrent.Executors.newCachedThreadPool(
+        new com.google.common.util.concurrent.ThreadFactoryBuilder().setDaemon(true).setNameFormat("Advancement loader - %d").build()
+    );
+    // Yatopia end
     public static final File b = new File("banned-players.json");
     public static final File c = new File("banned-ips.json");
     public static final File d = new File("ops.json");
