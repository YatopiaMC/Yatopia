From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Bud Gidiere <sgidiere@gmail.com>
Date: Sun, 27 Sep 2020 09:26:19 -0500
Subject: [PATCH] Add getLastTickNs api


diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 825cb882de70aa48f4a1a51b9cf426819d716b75..0f7b80944993b0d390e3475bedf711dc63767ba4 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -934,6 +934,7 @@ public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTas
     // Spigot End
 
     public static long lastTickMs = 0; // Yatopia
+    public static long lastTickNs = 0; // Yatopia
 
     protected void w() {
         try {
@@ -1003,9 +1004,9 @@ public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTas
                     this.a(gameprofilertick);
                     //this.methodProfiler.a(); // Akarin - remove caller
                     //this.methodProfiler.enter("tick"); // Akarin - remove caller
-                    long tickStart = System.currentTimeMillis(); // Yatopia
+                    long tickStart = System.nanoTime(); // Yatopia
                     this.a(this::canSleepForTick);
-                    lastTickMs = System.currentTimeMillis() - tickStart; // Yatopia
+                    lastTickNs = System.nanoTime() - tickStart; // Yatopia
                     //this.methodProfiler.exitEnter("nextTickWait"); // Akarin - remove caller
                     this.X = true;
                     // Purpur start - tps catchup
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index fd8ffcc962d0391262d9f8b08f6ea2f84d65851a..8c0ba378cb11c66ca145dc05b289fd452ebda389 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -2430,9 +2430,14 @@ public final class CraftServer implements Server {
     // Purpur end
 
     // Yatopia start
+    @Override
+    public long getLastTickNs() {
+        return net.minecraft.server.MinecraftServer.lastTickNs;
+    }
+
     @Override
     public long getLastTickMs() {
-        return net.minecraft.server.MinecraftServer.lastTickMs;
+        return ((net.minecraft.server.MinecraftServer.lastTickMs + 1000000 - 1) / 1000000);
     }
     // Yatopia end
 }
diff --git a/src/main/java/org/spigotmc/TicksPerSecondCommand.java b/src/main/java/org/spigotmc/TicksPerSecondCommand.java
index 76cf2353754821361a4541c21fc8d5f1a670b0de..a2639486766438ee4cfe5dfd3a81361d2e595678 100644
--- a/src/main/java/org/spigotmc/TicksPerSecondCommand.java
+++ b/src/main/java/org/spigotmc/TicksPerSecondCommand.java
@@ -33,7 +33,7 @@ public class TicksPerSecondCommand extends Command
         for ( int i = 0; i < tps.length; i++) {
             tpsAvg[i] = format( tps[i] );
         }
-        sender.sendMessage(ChatColor.GOLD + "TPS from last 5s, 1m, 5m, 15m: " + org.apache.commons.lang.StringUtils.join(tpsAvg, ", ") + ChatColor.GOLD + " Last tick time: " + format( org.bukkit.Bukkit.getLastTickMs() )); // Purpur // Yatopia
+        sender.sendMessage(ChatColor.GOLD + "TPS from last 5s, 1m, 5m, 15m: " + org.apache.commons.lang.StringUtils.join(tpsAvg, ", ") + ChatColor.GOLD + "\n Last tick Milliseconds: " + format( org.bukkit.Bukkit.getLastTickMs(), "ms") + "\n Last tick Nanoseconds: " + format( org.bukkit.Bukkit.getLastTickNs(), "ns") ); // Purpur // Yatopia
         if (args.length > 0 && args[0].equals("mem") && sender.hasPermission("bukkit.command.tpsmemory")) {
             sender.sendMessage(ChatColor.GOLD + "Current Memory Usage: " + ChatColor.GREEN + ((Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()) / (1024 * 1024)) + "/" + (Runtime.getRuntime().totalMemory() / (1024 * 1024)) + " mb (Max: " + (Runtime.getRuntime().maxMemory() / (1024 * 1024)) + " mb)");
             if (!hasShownMemoryWarning) {
@@ -54,10 +54,10 @@ public class TicksPerSecondCommand extends Command
     }
 
     // Yatopia start
-    public static String format(long ms)
+    public static String format(long ms, String end)
     {
         ChatColor startingColor = ms < 40 ? ChatColor.GREEN : ( ms < 50 ) ? ChatColor.YELLOW : ChatColor.RED;
-        return startingColor.toString() + ms + ChatColor.GOLD + "ms";
+        return startingColor.toString() + ms + ChatColor.GOLD + end;
     }
     // Yatopia end
 }
