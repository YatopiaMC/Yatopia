From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ivan Pekov <ivan@mrivanplays.com>
Date: Fri, 4 Sep 2020 10:07:42 +0300
Subject: [PATCH] Stop wasting resources on JsonList#get

Previously, when a banned player attempted to join the server was removing all the stale entries.
This caused a resource waste, which was unnoticeable to users that use ban plugins which doesn't
use the ban list. Akarin's changes for saving it async lowered the pressure, however it was
still pretty high.

Our changes are the following:
1. Stop removing all stale entries when JsonList#get is called.
2. Only if a player joins and his ban has expired, remove his ban which triggers a save which then
   triggers removing of all stale entries.

diff --git a/src/main/java/net/minecraft/server/players/JsonList.java b/src/main/java/net/minecraft/server/players/JsonList.java
index c960852dc60d0598012c5eef0d139fe38bde63fb..96fbb1a3d216302aa937e07bf88fdb19c6ccc764 100644
--- a/src/main/java/net/minecraft/server/players/JsonList.java
+++ b/src/main/java/net/minecraft/server/players/JsonList.java
@@ -71,9 +71,13 @@ public abstract class JsonList<K, V extends JsonListEntry<K>> {
         // Paper start
         // this.g();
         // return (V) this.d.get(this.a(k0)); // CraftBukkit - fix decompile error
+        // Yatopia start - only remove if it expires and has been requested
+        return this.getBackingMap().get(this.getMappingKey(k0));
+        /*
         return (V) this.getBackingMap().computeIfPresent(this.getMappingKey(k0), (k, v) -> {
             return v.hasExpired() ? null : v;
         });
+         */ // Yatopia end
         // Paper end
     }
 
@@ -151,12 +155,22 @@ public abstract class JsonList<K, V extends JsonListEntry<K>> {
         this.removeStaleEntries(); // Paper - remove expired values before saving
         JsonArray jsonarray = new JsonArray();
 
+        // Yatopia start - we're nuking streams wherever possible
+        /*
         this.d.values().stream().map((jsonlistentry) -> {
             JsonObject jsonobject = new JsonObject();
 
             jsonlistentry.getClass();
             return (JsonObject) SystemUtils.a(jsonobject, jsonlistentry::a); // CraftBukkit - decompile error
         }).forEach(jsonarray::add);
+        */
+        for (V value : this.d.values()) {
+            JsonObject obj = new JsonObject();
+            // todo: obfhelper for this?
+            value.a(obj);
+            jsonarray.add(obj);
+        }
+        // Yatopia end
         BufferedWriter bufferedwriter = Files.newWriter(this.c, StandardCharsets.UTF_8);
         Throwable throwable = null;
 
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 26a3eeb58a7862e1efdf02d39a56f49bac7b5c1f..f25d26e8dc711019f2140720251abecfa81e187e 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -740,6 +740,7 @@ public abstract class PlayerList {
         GameProfileBanEntry gameprofilebanentry;
         if (getProfileBans().isBanned(gameprofile) && (gameprofilebanentry = getProfileBans().get(gameprofile)) != null) {
             // Paper end
+            if (!gameprofilebanentry.hasExpired()) { // Yatopia
 
             chatmessage = new ChatMessage("multiplayer.disconnect.banned.reason", new Object[]{gameprofilebanentry.getReason()});
             if (gameprofilebanentry.getExpires() != null) {
@@ -747,7 +748,11 @@ public abstract class PlayerList {
             }
 
             // return chatmessage;
-            if (!gameprofilebanentry.hasExpired()) event.disallow(PlayerLoginEvent.Result.KICK_BANNED, PaperAdventure.asAdventure(chatmessage)); // Spigot // Paper - Adventure
+            // Yatopia start
+            /* if (!gameprofilebanentry.hasExpired()) */  event.disallow(PlayerLoginEvent.Result.KICK_BANNED, PaperAdventure.asAdventure(chatmessage)); // Spigot  // Paper - Adventure
+            } else {
+                getProfileBans().remove(gameprofile);
+            } // Yatopia end
         } else if (!this.isWhitelisted(gameprofile, event)) { // Paper
             //chatmessage = new ChatMessage("multiplayer.disconnect.not_whitelisted"); // Paper
             //event.disallow(PlayerLoginEvent.Result.KICK_WHITELIST, org.spigotmc.SpigotConfig.whitelistMessage); // Spigot // Paper - moved to isWhitelisted
