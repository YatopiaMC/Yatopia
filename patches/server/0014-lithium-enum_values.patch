From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: JellySquid <jellysquid+atwork@protonmail.com>
Date: Fri, 31 Jul 2020 21:44:22 -0500
Subject: [PATCH] lithium enum_values


diff --git a/src/main/java/net/minecraft/server/BlockPiston.java b/src/main/java/net/minecraft/server/BlockPiston.java
index 4f10ca5ada741b4f5ef941bb9d92a2fa6a7c44ff..3d6f8d948d293ca57bf158bcd1f58e289d937fb5 100644
--- a/src/main/java/net/minecraft/server/BlockPiston.java
+++ b/src/main/java/net/minecraft/server/BlockPiston.java
@@ -127,9 +127,9 @@ public class BlockPiston extends BlockDirectional {
         }
 
     }
+    private final static EnumDirection[] aenumdirection = EnumDirection.values(); // Yatopia - don't recreate
 
     private boolean a(World world, BlockPosition blockposition, EnumDirection enumdirection) {
-        EnumDirection[] aenumdirection = EnumDirection.values();
         int i = aenumdirection.length;
 
         int j;
@@ -146,12 +146,11 @@ public class BlockPiston extends BlockDirectional {
             return true;
         } else {
             BlockPosition blockposition1 = blockposition.up();
-            EnumDirection[] aenumdirection1 = EnumDirection.values();
 
-            j = aenumdirection1.length;
+            j = aenumdirection.length;
 
             for (int k = 0; k < j; ++k) {
-                EnumDirection enumdirection2 = aenumdirection1[k];
+                EnumDirection enumdirection2 = aenumdirection[k];
 
                 if (enumdirection2 != EnumDirection.DOWN && world.isBlockFacePowered(blockposition1.shift(enumdirection2), enumdirection2)) {
                     return true;
diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
index 2d67a24d0dfad7648bc146c8ab0a7b5649b7c4b6..0b1e110cd3be1642ee443ba226e7118f56dca14d 100644
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -2558,11 +2558,14 @@ public abstract class EntityLiving extends Entity {
         }
 
     }
+     /**
+      * @reason Avoid cloning enum values
+      */
+     private final static EnumItemSlot[] aenumitemslot = EnumItemSlot.values();
 
     @Nullable
     private Map<EnumItemSlot, ItemStack> r() {
         Map<EnumItemSlot, ItemStack> map = null;
-        EnumItemSlot[] aenumitemslot = EnumItemSlot.values();
         int i = aenumitemslot.length;
 
         for (int j = 0; j < i; ++j) {
diff --git a/src/main/java/net/minecraft/server/EnumAxisCycle.java b/src/main/java/net/minecraft/server/EnumAxisCycle.java
index a7c2543fdd4d5f6a04c45ec42472837ccaea9619..ccfa23af36f66618f4ef18b0d86c86a73de9ea9f 100644
--- a/src/main/java/net/minecraft/server/EnumAxisCycle.java
+++ b/src/main/java/net/minecraft/server/EnumAxisCycle.java
@@ -26,12 +26,21 @@ public enum EnumAxisCycle {
 
         @Override
         public EnumDirection.EnumAxis a(EnumDirection.EnumAxis enumdirection_enumaxis) {
-            return null.d[Math.floorMod(enumdirection_enumaxis.ordinal() + 1, 3)];
+            switch (enumdirection_enumaxis) {
+                case X:
+                    return EnumDirection.EnumAxis.Y;
+                case Y:
+                    return EnumDirection.EnumAxis.Z;
+                case Z:
+                    return EnumDirection.EnumAxis.X;
+            }
+
+            throw new IllegalArgumentException();
         }
 
         @Override
         public EnumAxisCycle a() {
-            return null.BACKWARD;
+            return BACKWARD;
         }
     },
     BACKWARD {
@@ -42,12 +51,21 @@ public enum EnumAxisCycle {
 
         @Override
         public EnumDirection.EnumAxis a(EnumDirection.EnumAxis enumdirection_enumaxis) {
-            return null.d[Math.floorMod(enumdirection_enumaxis.ordinal() - 1, 3)];
+            switch (enumdirection_enumaxis) {
+                case X:
+                    return EnumDirection.EnumAxis.Z;
+                case Y:
+                    return EnumDirection.EnumAxis.X;
+                case Z:
+                    return EnumDirection.EnumAxis.Y;
+            }
+
+            throw new IllegalArgumentException();
         }
 
         @Override
         public EnumAxisCycle a() {
-            return null.FORWARD;
+            return FORWARD;
         }
     };
 
diff --git a/src/main/java/net/minecraft/server/PistonExtendsChecker.java b/src/main/java/net/minecraft/server/PistonExtendsChecker.java
index b23e96ef11819f2892d8b50937fb68eaf0bc2a63..374622700c41cfb1fd043e65f9452457cf92294a 100644
--- a/src/main/java/net/minecraft/server/PistonExtendsChecker.java
+++ b/src/main/java/net/minecraft/server/PistonExtendsChecker.java
@@ -166,10 +166,10 @@ public class PistonExtendsChecker {
         this.f.addAll(list1);
         this.f.addAll(list2);
     }
+    private final static EnumDirection[] aenumdirection = EnumDirection.values(); // Yatopia - don't recreate
 
     private boolean a(BlockPosition blockposition) {
         IBlockData iblockdata = this.a.getType(blockposition);
-        EnumDirection[] aenumdirection = EnumDirection.values();
         int i = aenumdirection.length;
 
         for (int j = 0; j < i; ++j) {
