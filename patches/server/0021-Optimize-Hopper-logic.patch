From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: tr7zw <tr7zw@live.de>
Date: Fri, 26 Jun 2020 01:11:47 +0200
Subject: [PATCH] Optimize Hopper logic


diff --git a/src/main/java/net/minecraft/server/BlockDropper.java b/src/main/java/net/minecraft/server/BlockDropper.java
index 1ce89c28c2b54278dc8f1c17f2d0ccb743a27b34..9c0817d03f88af4c267cd91cd750e861febac4b9 100644
--- a/src/main/java/net/minecraft/server/BlockDropper.java
+++ b/src/main/java/net/minecraft/server/BlockDropper.java
@@ -36,7 +36,7 @@ public class BlockDropper extends BlockDispenser {
 
             if (!itemstack.isEmpty()) {
                 EnumDirection enumdirection = (EnumDirection) world.getType(blockposition).get(BlockDropper.FACING);
-                IInventory iinventory = TileEntityHopper.b(world, blockposition.shift(enumdirection));
+                IInventory iinventory = TileEntityHopper.b(world, blockposition.shift(enumdirection), false); // Yatopia
                 ItemStack itemstack1;
 
                 if (iinventory == null) {
diff --git a/src/main/java/net/minecraft/server/BlockHopper.java b/src/main/java/net/minecraft/server/BlockHopper.java
index a29294fbc7cd6fcfff0df9eadd11de3bd7f1405e..77f279fc29955ba6d78271f71df2ac12b7186d60 100644
--- a/src/main/java/net/minecraft/server/BlockHopper.java
+++ b/src/main/java/net/minecraft/server/BlockHopper.java
@@ -110,6 +110,12 @@ public class BlockHopper extends BlockTileEntity {
     @Override
     public void doPhysics(IBlockData iblockdata, World world, BlockPosition blockposition, Block block, BlockPosition blockposition1, boolean flag) {
         this.a(world, blockposition, iblockdata);
+		// Yatopia start
+		TileEntity tileEntity = world.getTileEntity(blockposition);
+		if (tileEntity instanceof TileEntityHopper) {
+			((TileEntityHopper)tileEntity).flushCaches();
+		}
+		// Yatopia end
     }
 
     private void a(World world, BlockPosition blockposition, IBlockData iblockdata) {
diff --git a/src/main/java/net/minecraft/server/TileEntityHopper.java b/src/main/java/net/minecraft/server/TileEntityHopper.java
index 3ff61141aede4b5a09bf83153222de0d14db5ad0..f57bd98df9db68a023c9a3b5469aa66d1ed86981 100644
--- a/src/main/java/net/minecraft/server/TileEntityHopper.java
+++ b/src/main/java/net/minecraft/server/TileEntityHopper.java
@@ -2,6 +2,7 @@ package net.minecraft.server;
 
 import java.util.Iterator;
 import java.util.List;
+import java.util.Optional;
 import java.util.function.Supplier;
 import java.util.stream.Collectors;
 import java.util.stream.IntStream;
@@ -661,14 +662,61 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
 
     @Nullable
     private IInventory l() {
+        // Yatopia start
+	    if (!blockUnderWasComposter && this.cachedPush != null) {
+		    return this.cachedPush;
+	    }
+	    // Yatopia end
         EnumDirection enumdirection = (EnumDirection) this.getBlock().get(BlockHopper.FACING);
 
-        return b(this.getWorld(), this.position.shift(enumdirection));
+	    // Yatopia start - replaced logic
+        // basically reimplement TileEntityHopper#b but in a better way in order to
+        // not make them composters bork
+        BlockPosition shifted = this.position.shift(enumdirection);
+        BlockPosition checkedPosition = new BlockPosition(shifted.getX() + 0.5D, shifted.getY() + 0.5D, shifted.getZ() + 0.5D);
+        if (blockUnderWasComposter || !cachedPushAir) {
+            if (!world.isLoaded(checkedPosition)) return null;
+            IBlockData blockData = world.getType(checkedPosition);
+            Block block = blockData.getBlock();
+            if (block instanceof IInventoryHolder) {
+                this.cachedPush = ((IInventoryHolder) block).a(blockData, world, checkedPosition);
+                blockUnderWasComposter = true;
+            } else if (block.isTileEntity()) {
+                TileEntity tileEntity = world.getTileEntity(checkedPosition);
+                if (tileEntity instanceof IInventory) {
+                    IInventory inv = (IInventory) tileEntity;
+                    if (inv instanceof TileEntityChest && block instanceof BlockChest) {
+                        inv = BlockChest.getInventory((BlockChest) block, blockData, world, checkedPosition, true);
+                    }
+                    this.cachedPush = inv;
+                }
+            }
+        }
+        if (this.cachedPush == null) {
+		    this.cachedPushAir = true;
+        }
+        return this.cachedPush;
+        // Yatopia end
     }
 
     @Nullable
     public static IInventory b(IHopper ihopper) {
-        return a(ihopper.getWorld(), ihopper.x(), ihopper.z() + 1.0D, ihopper.A());
+        // Yatopia start
+	    if (ihopper instanceof TileEntityHopper) {
+		    TileEntityHopper hopper = (TileEntityHopper) ihopper;
+		    if (hopper.cachedAbove != null) {
+			    return hopper.cachedAbove;
+		    }
+		    IInventory inv = a(ihopper.getWorld(), ihopper.x(), ihopper.z() + 1.0D, ihopper.A(), hopper.cachedPullAir);
+		    hopper.cachedAbove = inv;
+		    if (hopper.cachedAbove == null) {
+			    hopper.cachedPullAir = true;
+		    }
+            return inv;
+	    } else {
+		    return a(ihopper.getWorld(), ihopper.x(), ihopper.z() + 1.0D, ihopper.A(), false);
+	    }
+        // Yatopia end
     }
 
     public static List<EntityItem> c(IHopper ihopper) {
@@ -683,14 +731,15 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
     }
 
     @Nullable
-    public static IInventory b(World world, BlockPosition blockposition) {
-        return a(world, (double) blockposition.getX() + 0.5D, (double) blockposition.getY() + 0.5D, (double) blockposition.getZ() + 0.5D, true); // Paper
+    public static IInventory b(World world, BlockPosition blockposition, boolean skipBlockCheck) {
+        return a(world, (double) blockposition.getX() + 0.5D, (double) blockposition.getY() + 0.5D, (double) blockposition.getZ() + 0.5D, true, skipBlockCheck); // Yatopia // Paper
     }
 
     @Nullable
-    public static IInventory a(World world, double d0, double d1, double d2) { return a(world, d0, d1, d2, false); } // Paper - overload to default false
-    public static IInventory a(World world, double d0, double d1, double d2, boolean optimizeEntities) { // Paper
-        Object object = null;
+    public static IInventory a(World world, double d0, double d1, double d2, boolean skipBlockCheck) { return a(world, d0, d1, d2, false, skipBlockCheck); } // Yatopia // Paper - overload to default false
+    public static IInventory a(World world, double d0, double d1, double d2, boolean optimizeEntities, boolean skipBlockCheck) { // Yatopia // Paper
+	    Object object = null; // Yatopia
+	    if(!skipBlockCheck) { // Yatopia
         BlockPosition blockposition = new BlockPosition(d0, d1, d2);
         if ( !world.isLoaded( blockposition ) ) return null; // Spigot
         IBlockData iblockdata = world.getType(blockposition);
@@ -708,8 +757,9 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
                 }
             }
         }
+	    } // Yatopia
 
-        if (object == null && (!optimizeEntities || !org.bukkit.craftbukkit.util.CraftMagicNumbers.getMaterial(block).isOccluding())) { // Paper
+        if (object == null && (!optimizeEntities || true/*!org.bukkit.craftbukkit.util.CraftMagicNumbers.getMaterial(block).isOccluding()*/)) { // Yatopia // Paper
             List<Entity> list = world.getEntities((Entity) null, new AxisAlignedBB(d0 - 0.5D, d1 - 0.5D, d2 - 0.5D, d0 + 0.5D, d1 + 0.5D, d2 + 0.5D), IEntitySelector.d);
 
             if (!list.isEmpty()) {
@@ -779,4 +829,20 @@ public class TileEntityHopper extends TileEntityLootable implements IHopper, ITi
     protected Container createContainer(int i, PlayerInventory playerinventory) {
         return new ContainerHopper(i, playerinventory, this);
     }
+
+    // Yatopia start
+    private IInventory cachedAbove = null;
+    private IInventory cachedPush = null;
+    private boolean cachedPushAir = false;
+    private boolean cachedPullAir = false;
+    private boolean blockUnderWasComposter = false;
+    public void flushCaches() {
+	    cachedAbove = null;
+	    cachedPush = null;
+	    cachedPushAir = false;
+	    cachedPullAir = false;
+	    blockUnderWasComposter = false;
+    }
+    // Yatopia end
+
 }
